rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /// Public profile (any signed-in user can read)
  match /users/{userId} {
  allow read: if request.auth != null;  // any signed-in user can read
  allow write: if request.auth != null && request.auth.uid == userId;
  }


        // ----------------------
    // Friend requests
    // ----------------------
    match /friend_requests/{requestId} {
      allow read, write: if request.auth != null;
    }
    

    // ----------------------
    // Scores (individual test attempts)
    // ----------------------
    match /scores/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
                   && request.auth.uid == request.resource.data.userId;
    }

    // ----------------------
    // Test Attempts
    // ----------------------
    match /test_attempts/{attemptId} {
      allow create: if request.auth != null 
                    && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null 
                  && resource.data.userId == request.auth.uid;
    }

    // ----------------------
    // User Ranks (per-scope leaderboard entries)
    // ----------------------
    match /userRanks/{rankId} {
      allow read: if request.auth != null;
      allow write: if false; // aggregation-only, client cannot write
    }

    // ----------------------
    // Leaderboards (read-only)
    // ----------------------
    match /leaderboards/{leaderboardId} {
      allow read: if request.auth != null;
      allow write: if false; // read-only to clients
    }
         // ----------------------
    // Group for seperate security
    // ----------------------
     match /contexts/{contextType}/items/{contextId}/groups/{groupId} {
    allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
    allow read: if request.auth != null && request.auth.uid in resource.data.memberIds;
    allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
   }

    // ----------------------
    // Generic Contexts (school, group, district, upazila, division, global)
    // ----------------------
    match /contexts/{contextType}/items/{contextId} {
      // Metadata of each context (e.g. name, createdBy, scope)
      allow read: if request.auth != null;
      allow write: if request.auth != null; 
    }

    // ----------------------
    // Subcollections under contexts (teams, scores, members, etc.)
    // ----------------------
    match /contexts/{contextType}/items/{contextId}/{subCol}/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
}
